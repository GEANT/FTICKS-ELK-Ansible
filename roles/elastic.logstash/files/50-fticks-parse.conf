filter{
  grok{
    match => [ "message", "<%{POSINT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{GREEDYDATA:hostname} \[%{GREEDYDATA:process}\] %{GREEDYDATA:syslog_message}" ]
  }
  grok{
    match => [ "syslog_message", "%{GREEDYDATA:bean} F-TICKS/%{DATA:federation}/%{DATA:version}[#]%{GREEDYDATA:fticks_message}" ]
  }
  grok{
    match => [ "fticks_message", "%{GREEDYDATA}TS=%{DATA:TS}[#]%{GREEDYDATA}" ]
  }
  if "_grokparsefailure" in [tags] {
    mutate{
      remove_tag => [ "_grokparsefailure" ]
      add_tag => [ "no_TS" ]
    }
  }
  grok{
    match => [ "fticks_message", "%{GREEDYDATA}RP=%{DATA:RP}[#]%{GREEDYDATA}" ]
  }
  if "_grokparsefailure" in [tags] {
    mutate{
      remove_tag => [ "_grokparsefailure" ]
      add_tag => [ "no_RP" ]
    }
  }
  grok{
    match => [ "fticks_message", "%{GREEDYDATA}AP=%{DATA:AP}[#]%{GREEDYDATA}" ]
  }
  if "_grokparsefailure" in [tags] {
    mutate{
      remove_tag => [ "_grokparsefailure" ]
      add_tag => [ "no_AP" ]
    }
  }
  grok{
    match => [ "fticks_message", "%{GREEDYDATA}PN=%{DATA:PN}[#]%{GREEDYDATA}" ]
  }
  if "_grokparsefailure" in [tags] {
    mutate{
      remove_tag => [ "_grokparsefailure" ]
      add_tag => [ "no_PN" ]
    }
  }
  grok{
    match => [ "fticks_message", "%{GREEDYDATA}CSI=%{DATA:CSI}[#]%{GREEDYDATA}" ]
  }
  if "_grokparsefailure" in [tags] {
    mutate{
      remove_tag => [ "_grokparsefailure" ]
      add_tag => [ "no_CSI" ]
    }
  }
  grok{
    match => [ "fticks_message", "%{GREEDYDATA}AM=%{DATA:AM}[#]%{GREEDYDATA}" ]
  }
  if "_grokparsefailure" in [tags] {
    mutate{
      remove_tag => [ "_grokparsefailure" ]
      add_tag => [ "no_AM" ]
    }
  }
  grok{
    match => [ "fticks_message", "%{GREEDYDATA}RESULT=%{DATA:RESULT}[#]%{GREEDYDATA}" ]
  }
  if "_grokparsefailure" in [tags] {
    mutate{
      remove_tag => [ "_grokparsefailure" ]
      add_tag => [ "no_RESULT" ]
    }
  }
  if "no_RP" not in [tags] {
    grok {
      match => [ "RP", "%{URIPROTO:RP_uri_proto}://(?:%{USER:RP_user}(?::[^@]*)?@)?(?:%{URIHOST:RP_uri_domain})?(?:%{URIPATHPARAM:RP_uri_param})?" ]
    }
    geoip {
      source => "RP_uri_domain"
      target => "RP_geoip"
    }
  }
  if "no_AP" not in [tags] {
    grok {
      match => [ "AP", "%{URIPROTO:AP_uri_proto}://(?:%{USER:AP_user}(?::[^@]*)?@)?(?:%{URIHOST:AP_uri_domain})?(?:%{URIPATHPARAM:AP_uri_param})?" ]
    }
    geoip {
      source => "AP_uri_domain"
      target => "AP_geoip"
    }
  }
}
